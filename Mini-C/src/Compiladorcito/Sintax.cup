package Compiladorcito;

import java_cup.runtime.*;
import java.util.ArrayList;
import java.util.*;
import java.io.*;

parser code {:
    ArrayList gramas = new ArrayList();
    public Nodo raiz;
    public int cont = 0;
    public int maximo(){
    int a=5;
    return a;
}
    ArrayList errores=new ArrayList();
    public Symbol s;
    @Override
    public void syntax_error (Symbol s){
        if(s.left==-1){
        }else{
                errores.add("Syntax error en la línea: " + (s.left) + " , columna: " +(s.right)+ " con el símbolo = "+(s.value));
    }
}
    @Override
    public void unrecovered_syntax_error(Symbol s){
    if(s.left==-1){
    }else{
        errores.add("Error desconocido, por favor revise la linea: " + (s.left ) + " y columna:  " + (s.right )+ "Con simbolo: "+s.value);
    }    
    }
    public Symbol getS(){
        return this.s;
    }
:} ;



terminal tkn_opadicion,tkn_opmulti, tkn_break, tkn_opmod ;
terminal tkn_oprel ,tkn_main, tkn_intp, tkn_charp, tkn_void;
terminal tkn_if ,tkn_while, tkn_else,tkn_parentesisiz ,tkn_parentesisde ,tkn_llaveiz ,tkn_llaveder ; 
terminal tkn_and,tkn_or,tkn_for,tkn_return, tkn_printf, tkn_scanf, tkn_increment, tkn_decrement;
terminal tkn_dospuntos,tkn_int ,tkn_char, tkn_id, tkn_puntocoma, tkn_ternario, tkn_num, tkn_coma;
terminal tkn_ampersand, tkn_cadena, tkn_caracter;


non terminal WHILE, IF, FOR,CONDICION, ELSE, CONDICIONP, TIPO, 
    IDINT, TERNARIO, CONTADOR, SCANF, FUNCION, FUNCIONPARAMS, DECLAPARAM, PROTOTIPO, PROTOPARAMS, 
    RETURN, PARAMS, LLAMADO, ARGSPARAMS, ARGS, EXPRTERNARIO, EXPRFIN, EXPR, ASIGN, ITERADOR;
non terminal INICIO,MAIN,BLOQUE,FUNCIONES,PRINTF,DECLARACION, PROGRAM,LISTADO_PROTOTIPOS,LISTADO_FUNCIONES, DECLR, COSO;

start with LISTADO_PROTOTIPOS;

PROGRAM::= LISTADO_FUNCIONES:f
;

DECLR::= TIPO tkn_id
;

COSO::= DECLR tkn_parentesisiz PARAMS tkn_parentesisde
;

PARAMS::= TIPO tkn_coma PARAMS
         | DECLR tkn_coma PARAMS
         | DECLR
         | TIPO
;


LISTADO_FUNCIONES ::= FUNCION LISTADO_FUNCIONES
;

LISTADO_PROTOTIPOS::= PROTOTIPO LISTADO_PROTOTIPOS
                    | PROGRAM
                    |
;

TIPO::= tkn_int
        | tkn_char
        | tkn_charp
        | tkn_intp
;

FUNCION::= COSO tkn_llaveiz tkn_llaveder
;

PROTOTIPO::= COSO tkn_puntocoma
;